{
  "hash": "6379c4586234aff614fa7267111ef1c2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: '<span class=\"humans-learning-post\">Humans Learning</span>'\nsubtitle: \"Reshaping data from wide to longer\"\ncategories: [R, data, tidyr, pivot]\ndate: \"2024-12-12\"\nauthor: \"Brian Calhoon\"\ntitle-block-banner: \"#C9C9C9\"\nimage: \"eyes.jpg\"\nformat: \n  html:\n    code-fold: false\n    code-summary: \"Show the code\"\n    toc: true\n    css: styles.css\neditor: visual\nfilters: \n  - webr\n---\n\n\n\n\n\n# Why am I here?        `<svg preserveAspectRatio=\"none\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 480 512\" style=\"height:2em;width:2em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#FFB947;overflow:visible;position:relative;\"><path d=\"M313.2 47.5c1.2-13 21.3-14 36.6-8.7.9.3 26.2 9.7 19 15.2-27.9-7.4-56.4 18.2-55.6-6.5zm-201 6.9c30.7-8.1 62 20 61.1-7.1-1.3-14.2-23.4-15.3-40.2-9.6-1 .3-28.7 10.5-20.9 16.7zM319.4 160c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-159.7 0c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm318.5 163.2c-9.9 24-40.7 11-63.9-1.2-13.5 69.1-58.1 111.4-126.3 124.2.3.9-2-.1 24 1 33.6 1.4 63.8-3.1 97.4-8-19.8-13.8-11.4-37.1-9.8-38.1 1.4-.9 14.7 1.7 21.6 11.5 8.6-12.5 28.4-14.8 30.2-13.6 1.6 1.1 6.6 20.9-6.9 34.6 4.7-.9 8.2-1.6 9.8-2.1 2.6-.8 17.7 11.3 3.1 13.3-14.3 2.3-22.6 5.1-47.1 10.8-45.9 10.7-85.9 11.8-117.7 12.8l1 11.6c3.8 18.1-23.4 24.3-27.6 6.2.8 17.9-27.1 21.8-28.4-1l-.5 5.3c-.7 18.4-28.4 17.9-28.3-.6-7.5 13.5-28.1 6.8-26.4-8.5l1.2-12.4c-36.7.9-59.7 3.1-61.8 3.1-20.9 0-20.9-31.6 0-31.6 2.4 0 27.7 1.3 63.2 2.8-61.1-15.5-103.7-55-114.9-118.2-25 12.8-57.5 26.8-68.2.8-10.5-25.4 21.5-42.6 66.8-73.4.7-6.6 1.6-13.3 2.7-19.8-14.4-19.6-11.6-36.3-16.1-60.4-16.8 2.4-23.2-9.1-23.6-23.1.3-7.3 2.1-14.9 2.4-15.4 1.1-1.8 10.1-2 12.7-2.6 6-31.7 50.6-33.2 90.9-34.5 19.7-21.8 45.2-41.5 80.9-48.3C203.3 29 215.2 8.5 216.2 8c1.7-.8 21.2 4.3 26.3 23.2 5.2-8.8 18.3-11.4 19.6-10.7 1.1.6 6.4 15-4.9 25.9 40.3 3.5 72.2 24.7 96 50.7 36.1 1.5 71.8 5.9 77.1 34 2.7.6 11.6.8 12.7 2.6.3.5 2.1 8.1 2.4 15.4-.5 13.9-6.8 25.4-23.6 23.1-3.2 17.3-2.7 32.9-8.7 47.7 2.4 11.7 4 23.8 4.8 36.4 37 25.4 70.3 42.5 60.3 66.9zM207.4 159.9c.9-44-37.9-42.2-78.6-40.3-21.7 1-38.9 1.9-45.5 13.9-11.4 20.9 5.9 92.9 23.2 101.2 9.8 4.7 73.4 7.9 86.3-7.1 8.2-9.4 15-49.4 14.6-67.7zm52 58.3c-4.3-12.4-6-30.1-15.3-32.7-2-.5-9-.5-11 0-10 2.8-10.8 22.1-17 37.2 15.4 0 19.3 9.7 23.7 9.7 4.3 0 6.3-11.3 19.6-14.2zm135.7-84.7c-6.6-12.1-24.8-12.9-46.5-13.9-40.2-1.9-78.2-3.8-77.3 40.3-.5 18.3 5 58.3 13.2 67.8 13 14.9 76.6 11.8 86.3 7.1 15.8-7.6 36.5-78.9 24.3-101.3z\"/></svg>`{=html}\n\n:::: box\n::: box-header\nWelcome back! As a reminder, each lesson is designed as a 5 - 10 minute virtual session conducted for EnCompass staff to expand their skills with data, and the means of learning is the R programming language.\n\n-   Usefulness of pivoting data\n:::\n::::\n\n# Learning objectives\n\nFor this session, the learning objective is to:\n\n-   Reshape data from wide to long data\n\nAs always, make sure the correct packages are active in the session.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# installing packages\n#install.packages(\"tidyverse\")\n#install.packages(\"readxl\")\n#install.packages(\"writexl\")\n#install.packages(\"here\")\n#install.packages(\"writexl\")\n\n# another option for installing packages\n#install.packages(c(\"tidyverse\", \"readxl\", \"writexl\", \"here\", \"writexl\"))\n\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(writexl)\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nhere() starts at C:/Users/brian/OneDrive/Documents/website\n```\n\n\n:::\n:::\n\n\n\n# What is the point of this?\n\nGood question. When we collect data in the real and virtual worlds it is rarely structured for analysis. A common need is that we have to pivot a dataset from a wide to a long format. A dataset often comes in a wide format with a question in a column followed by a few columns with options for responses where each option is its own column.   Here's an simple example to illustrate the point. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- read_xlsx(here::here(\"posts/pivot_longer/colors.xlsx\")) \n\nknitr::kable(df)\n```\n\n::: {.cell-output-display}\n\n\n|Resp |What_is_your_favorite color? | blue| red| green| purple|\n|:----|:----------------------------|----:|---:|-----:|------:|\n|A    |NA                           |    1|  NA|    NA|     NA|\n|B    |NA                           |   NA|   1|    NA|     NA|\n|C    |NA                           |   NA|  NA|     1|     NA|\n|D    |NA                           |   NA|  NA|    NA|      1|\n|E    |NA                           |   NA|  NA|     1|     NA|\n|F    |NA                           |    1|   1|    NA|      1|\n|G    |NA                           |    1|  NA|    NA|     NA|\n\n\n:::\n:::\n\n\n\n## Indeed, this data is Wide\n\nWe've got five columns of data for a respondent's favorite color, and for some reason person F selected 3 colors. Here are a few more observations.\n\n-   The column with the question just holds the question variable and is blank.\n\n-   The majority of rows in these columns are also blank.\n\n-   A single variable - favorite color - is spread out over a bunch of columns.\n\nTo simplify this, let's put these all in a single column.\n\n## Reshaping\n\nWe'll create a new object called df1. This maintains our original df object in case we still have a need for the original object. Then, let's eliminate the 2nd column that is all blanks. Next, pivot the columns with the 1s in a single column, and change the 1s to the name of each color. Finally, we should put pivotted data in a column with a name that is clear and useful for coding -- fav_color. Here's the code to do this.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- df |> \n  select(-2) |>  #eliminates the 2nd column\n  pivot_longer(cols = 2:5, #use these columns for the transformation\n               names_to = \"fav_color\", #Name the column where the the color names are stored\n               values_drop_na = TRUE) #remove the rows with missing data\n\nknitr::kable(df1) \n```\n\n::: {.cell-output-display}\n\n\n|Resp |fav_color | value|\n|:----|:---------|-----:|\n|A    |blue      |     1|\n|B    |red       |     1|\n|C    |green     |     1|\n|D    |purple    |     1|\n|E    |green     |     1|\n|F    |blue      |     1|\n|F    |red       |     1|\n|F    |purple    |     1|\n|G    |blue      |     1|\n\n\n:::\n:::\n\n\n\nSuccess! Within the `pivot_longer()` call, we told it to use columns 2 through 5 since we want to keep the Resp(ondents) column unchanged. We maintained the first column and added additional rows to account for the multiple colors selected by Resp F.\n\n## Have fun!\n\nNow it's your turn practice! Below is a fully functioning code editor with starting code in place. Try pivoting data, and then feel free to make a bar chart using ggplot + geom_bar() (or geom_col()).\n\n```{webr-r}\n\nlibrary(tidyverse)\nlibrary(readxl)\n\ndf <- read_xlsx(\"https://github.com/DABrianC/website/blob/main/posts/pivot_longer/colors.xlsx\")\n\n\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}