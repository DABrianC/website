{
  "hash": "2c48d2d1301be7f63bed4c038a79c9d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: '<span class=\"humans-learning-post\">Sentiment Analysis: Llama Llama</span>'\nsubtitle: \"Comparing Llama sentiment analysis with two sentiment lexicons\"\ncategories: [R, llama, sentiments]\ndate: \"2024-11-08\"\nauthor: \"Brian Calhoon\"\ntitle-block-banner: \"#C9C9C9\"\nimage: \"density_plot.png\"\nformat: \n  html:\n    code-fold: false\n    code-summary: \"Show the code\"\n    toc: true\n    css: styles.css\neditor: visual\nexecute:\n  message: false\n  warning: false\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n#load libraries \nlibrary(ollamar)\nlibrary(mall)\nlibrary(remotes)\nlibrary(textdata)\nlibrary(tidytext)\nlibrary(tidyverse)\nlibrary(DT)\nlibrary(ggtext)\n```\n:::\n\n\n\n\n# Why am I here?        `<svg preserveAspectRatio=\"none\" aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 480 512\" style=\"height:2em;width:2em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:#FFB947;overflow:visible;position:relative;\"><path d=\"M313.2 47.5c1.2-13 21.3-14 36.6-8.7.9.3 26.2 9.7 19 15.2-27.9-7.4-56.4 18.2-55.6-6.5zm-201 6.9c30.7-8.1 62 20 61.1-7.1-1.3-14.2-23.4-15.3-40.2-9.6-1 .3-28.7 10.5-20.9 16.7zM319.4 160c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm-159.7 0c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zm318.5 163.2c-9.9 24-40.7 11-63.9-1.2-13.5 69.1-58.1 111.4-126.3 124.2.3.9-2-.1 24 1 33.6 1.4 63.8-3.1 97.4-8-19.8-13.8-11.4-37.1-9.8-38.1 1.4-.9 14.7 1.7 21.6 11.5 8.6-12.5 28.4-14.8 30.2-13.6 1.6 1.1 6.6 20.9-6.9 34.6 4.7-.9 8.2-1.6 9.8-2.1 2.6-.8 17.7 11.3 3.1 13.3-14.3 2.3-22.6 5.1-47.1 10.8-45.9 10.7-85.9 11.8-117.7 12.8l1 11.6c3.8 18.1-23.4 24.3-27.6 6.2.8 17.9-27.1 21.8-28.4-1l-.5 5.3c-.7 18.4-28.4 17.9-28.3-.6-7.5 13.5-28.1 6.8-26.4-8.5l1.2-12.4c-36.7.9-59.7 3.1-61.8 3.1-20.9 0-20.9-31.6 0-31.6 2.4 0 27.7 1.3 63.2 2.8-61.1-15.5-103.7-55-114.9-118.2-25 12.8-57.5 26.8-68.2.8-10.5-25.4 21.5-42.6 66.8-73.4.7-6.6 1.6-13.3 2.7-19.8-14.4-19.6-11.6-36.3-16.1-60.4-16.8 2.4-23.2-9.1-23.6-23.1.3-7.3 2.1-14.9 2.4-15.4 1.1-1.8 10.1-2 12.7-2.6 6-31.7 50.6-33.2 90.9-34.5 19.7-21.8 45.2-41.5 80.9-48.3C203.3 29 215.2 8.5 216.2 8c1.7-.8 21.2 4.3 26.3 23.2 5.2-8.8 18.3-11.4 19.6-10.7 1.1.6 6.4 15-4.9 25.9 40.3 3.5 72.2 24.7 96 50.7 36.1 1.5 71.8 5.9 77.1 34 2.7.6 11.6.8 12.7 2.6.3.5 2.1 8.1 2.4 15.4-.5 13.9-6.8 25.4-23.6 23.1-3.2 17.3-2.7 32.9-8.7 47.7 2.4 11.7 4 23.8 4.8 36.4 37 25.4 70.3 42.5 60.3 66.9zM207.4 159.9c.9-44-37.9-42.2-78.6-40.3-21.7 1-38.9 1.9-45.5 13.9-11.4 20.9 5.9 92.9 23.2 101.2 9.8 4.7 73.4 7.9 86.3-7.1 8.2-9.4 15-49.4 14.6-67.7zm52 58.3c-4.3-12.4-6-30.1-15.3-32.7-2-.5-9-.5-11 0-10 2.8-10.8 22.1-17 37.2 15.4 0 19.3 9.7 23.7 9.7 4.3 0 6.3-11.3 19.6-14.2zm135.7-84.7c-6.6-12.1-24.8-12.9-46.5-13.9-40.2-1.9-78.2-3.8-77.3 40.3-.5 18.3 5 58.3 13.2 67.8 13 14.9 76.6 11.8 86.3 7.1 15.8-7.6 36.5-78.9 24.3-101.3z\"/></svg>`{=html}\n\n:::: box\n::: box-header\nMaybe you are curious about sentiment analysis? This demonstration will take an example dataframe that has a text field and compare the ability of Meta's LLama 3.2, bing's lexicon, and Loughran-McDonald's lexicon at identifying positive and negative sentiments from short responses. This draws on the great work of Julia Silge and David Robinson [Text Mining with R](www.tidytextmining.com) for the lexicon-based sentiment analysis. For the Llama part of the analysis, the `ollama` and `mall` R packages do the heavy lifting with `mall` providing the tidy functions that are used to interact with the data. Then we'll wrap it all up with a density plot comparing the scoring of each approach. Enjoy!\n:::\n::::\n\n# Comparing the different approaches to sentiment analysis\n\nI am curious to test this out for a few reasons. First, I find sentiments an interesting way to categorize qualitative data. Second, I like the idea of running a large language model (LLM) locally. Third, this is an open-source large language model so the costs are minimal. Fourth, I have been curious how out-of-the-box lexicon-based sentiment analysis approaches compare to what an LLM can do. So, let's dive in.\n\n## A dataset\n\nHere's a minimal dataset that allows us to confirm what is being done with a quick look. You can explore it in the table below. For our purposes we're mainly interested in the column `text_response`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- readxl::read_xlsx(here::here(\"posts/llama/testdata2.xlsx\")) \n\ndf <- df |> \n  select(-location, -type_visit, -lat, -long)\n\nDT::datatable(df, class = 'cell-border stripe', option = list(pageLength = 5), filter = \"top\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-ae6901a3b40dc8546cb8\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ae6901a3b40dc8546cb8\">{\"x\":{\"filter\":\"top\",\"vertical\":false,\"filterHTML\":\"<tr>\\n  <td><\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"20\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"number\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n    <div style=\\\"display: none;position: absolute;width: 200px;opacity: 1\\\">\\n      <div data-min=\\\"1\\\" data-max=\\\"9\\\"><\\/div>\\n      <span style=\\\"float: left;\\\"><\\/span>\\n      <span style=\\\"float: right;\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n  <td data-type=\\\"character\\\" style=\\\"vertical-align: top;\\\">\\n    <div class=\\\"form-group has-feedback\\\" style=\\\"margin-bottom: auto;\\\">\\n      <input type=\\\"search\\\" placeholder=\\\"All\\\" class=\\\"form-control\\\" style=\\\"width: 100%;\\\"/>\\n      <span class=\\\"glyphicon glyphicon-remove-circle form-control-feedback\\\"><\\/span>\\n    <\\/div>\\n  <\\/td>\\n<\\/tr>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],[\"M\",\"F\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\",\"M\",\"F\",\"F\",\"F\",\"M\",\"M\"],[\"yes\",\"no\",\"yes\",\"no\",\"yes\",\"no\",\"yes\",\"yes\",\"no\",\"yes\",\"yes\",\"yes\",\"yes\",\"yes\",\"no\",\"no\",\"no\",\"yes\",\"no\",\"yes\"],[1,5,6,2,7,1,3,3,5,7,8,9,4,2,3,1,6,4,2,2],[\"I liked the service.\",\"I did not like the service.\",\"The service was bad.\",\"Amazing\",\"Poor\",\"Some great things happened while others did not.\",\"The team was very nice and responded to all of my questions\",\"I wish there had been more offered.\",\"I was treated badly\",\"Where should I begin. It was challenging to figure out the process, and I didn't like the person leading the team.\",\"I received what I expected on time.\",\"People were rude.\",\"There were too many people making it a very crowded place.\",\"The lighting was suboptimal.\",\"I would have appreciated greater followup.\",\"Yes, the team delivered what they said they would.\",\"I didn't appreciate the location of the delivery.\",\"More support is needed for the future.\",\"I was told that I didn't get anything.\",\"I forgot my ID card, but I was able to sort it out with a friendly staff member.\"]],\"container\":\"<table class=\\\"cell-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>respondentid<\\/th>\\n      <th>gender<\\/th>\\n      <th>v1<\\/th>\\n      <th>v2<\\/th>\\n      <th>text_response<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"respondentid\",\"targets\":1},{\"name\":\"gender\",\"targets\":2},{\"name\":\"v1\",\"targets\":3},{\"name\":\"v2\",\"targets\":4},{\"name\":\"text_response\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"orderCellsTop\":true,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Sentiment analysis with bing and Loughran-McDonald\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbing <- tidytext::get_sentiments(lexicon = \"bing\")\n\n# Set option to skip interactive prompts\noptions(textdata_download_prompt = FALSE)\n\nloughran <- textdata::lexicon_loughran()\n```\n:::\n\n\n\nSentiment lexicons are basically lists of words that have been coded with a sentiment value (positive, negative, or a number score). The bing lexicon has 6786 words and the Loughran-McDonald has 4150 words. We can tokenize and identify the sentiment words and then quantify all positive words as 1 and negative words as -1 before computing an average sentiment score for each respondent. This table shows you which words bing identified and which words Loughran-McDonald identified. You can see how they identify different words and are not great lexicons for this particular task.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_bing <- df |>\n  #dplyr::select(text_response) |> \n  dplyr::mutate(respondent = row_number()) |> \n  tidytext::unnest_tokens(word, text_response) |> \n  dplyr::inner_join(bing) \n\ndf_loughran <- df |> \n  dplyr::mutate(respondent = row_number()) |> \n  tidytext::unnest_tokens(word, text_response) |> \n  dplyr::inner_join(loughran)\n\ndf_bing_loughran <- df_bing |> \n  dplyr::full_join(df_loughran, by = \"respondentid\") |> \n  select(respondentid, bing_words = word.x, bing_sentiments = sentiment.x, loughran_words = word.y, loughran_sentiments = sentiment.y)\n\nDT::datatable(df_bing_loughran, class = 'cell-border stripe', option = list(pageLength = 5))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-d4783340674f0c21830f\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d4783340674f0c21830f\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\"],[1,2,3,4,5,6,7,9,10,10,10,10,10,10,12,13,15,17,18,20,20],[\"liked\",\"like\",\"bad\",\"amazing\",\"poor\",\"great\",\"nice\",\"badly\",\"challenging\",\"challenging\",\"like\",\"like\",\"leading\",\"leading\",\"rude\",\"crowded\",\"appreciated\",\"appreciate\",\"support\",\"friendly\",\"friendly\"],[\"positive\",\"positive\",\"negative\",\"positive\",\"negative\",\"positive\",\"positive\",\"negative\",\"negative\",\"negative\",\"positive\",\"positive\",\"positive\",\"positive\",\"negative\",\"negative\",\"positive\",\"positive\",\"positive\",\"positive\",\"positive\"],[null,null,\"bad\",null,\"poor\",\"great\",\"questions\",null,\"challenging\",\"leading\",\"challenging\",\"leading\",\"challenging\",\"leading\",null,null,\"greater\",null,null,\"able\",\"friendly\"],[null,null,\"negative\",null,\"negative\",\"positive\",\"negative\",null,\"negative\",\"positive\",\"negative\",\"positive\",\"negative\",\"positive\",null,null,\"positive\",null,null,\"positive\",\"positive\"]],\"container\":\"<table class=\\\"cell-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>respondentid<\\/th>\\n      <th>bing_words<\\/th>\\n      <th>bing_sentiments<\\/th>\\n      <th>loughran_words<\\/th>\\n      <th>loughran_sentiments<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"respondentid\",\"targets\":1},{\"name\":\"bing_words\",\"targets\":2},{\"name\":\"bing_sentiments\",\"targets\":3},{\"name\":\"loughran_words\",\"targets\":4},{\"name\":\"loughran_sentiments\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# data wrangling to get the bing sentiments object\nbing_sents <- df |>\n  dplyr::select(text_response) |> \n  dplyr::mutate(respondent = row_number()) |> \n  tidytext::unnest_tokens(word, text_response) |> \n  dplyr::inner_join(bing) |> \n  dplyr::mutate(value = case_when(sentiment == \"positive\" ~ 1\n                               , sentiment == \"negative\" ~ -1)) |> \n      dplyr::group_by(respondent) |> \n      dplyr::summarize(score = mean(value))\n\n# data wrangling to get the Loughran-McDonald sentiments object\nloughran_sents <- df |>\n  dplyr::select(text_response) |> \n  dplyr::mutate(respondent = row_number()) |> \n  tidytext::unnest_tokens(word, text_response) |> \n  dplyr::inner_join(loughran) |> \n  dplyr::mutate(value = case_when(sentiment == \"positive\" ~ 1\n        , sentiment == \"negative\" ~ -1)) |> \n      dplyr::group_by(respondent) |> \n      dplyr::summarize(score = mean(value))\n```\n:::\n\n\n\nThen, we do a similar process using Llama, but we don't have to take an average score because the LLM provides its own rating of positive, negative, or neutral for each respondent.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmall::llm_use(\"ollama\", \"llama3.2\", seed = 100, .cache = \"_readme_cache\")\n\nllama_sents <- df |>\n  dplyr::select(text_response) |> \n  dplyr::mutate(respondent = row_number()) |> \n  mall::llm_sentiment(col = text_response, options = c(\"positive\",  \"negative\", \"neutral\")) |> \n  dplyr::mutate(value = case_when(.sentiment == \"positive\" ~ 1\n                               , .sentiment == \"negative\" ~ -1\n                               , .sentiment == \"neutral\" ~ 0)) \n\n\nDT::datatable(llama_sents, class = 'cell-border stripe', option = list(pageLength = 5))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-5e2256b1f94d6a0569da\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5e2256b1f94d6a0569da\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"I liked the service.\",\"I did not like the service.\",\"The service was bad.\",\"Amazing\",\"Poor\",\"Some great things happened while others did not.\",\"The team was very nice and responded to all of my questions\",\"I wish there had been more offered.\",\"I was treated badly\",\"Where should I begin. It was challenging to figure out the process, and I didn't like the person leading the team.\",\"I received what I expected on time.\",\"People were rude.\",\"There were too many people making it a very crowded place.\",\"The lighting was suboptimal.\",\"I would have appreciated greater followup.\",\"Yes, the team delivered what they said they would.\",\"I didn't appreciate the location of the delivery.\",\"More support is needed for the future.\",\"I was told that I didn't get anything.\",\"I forgot my ID card, but I was able to sort it out with a friendly staff member.\"],[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],[\"positive\",\"negative\",\"negative\",\"positive\",\"negative\",\"neutral\",\"positive\",\"negative\",\"negative\",\"negative\",\"positive\",\"negative\",\"negative\",\"negative\",\"negative\",\"positive\",\"negative\",\"negative\",\"negative\",\"positive\"],[1,-1,-1,1,-1,0,1,-1,-1,-1,1,-1,-1,-1,-1,1,-1,-1,-1,1]],\"container\":\"<table class=\\\"cell-border stripe\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>text_response<\\/th>\\n      <th>respondent<\\/th>\\n      <th>.sentiment<\\/th>\\n      <th>value<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"text_response\",\"targets\":1},{\"name\":\"respondent\",\"targets\":2},{\"name\":\".sentiment\",\"targets\":3},{\"name\":\"value\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Visualizing the outputs\n\nA simple comparison of each approach can be done with a density plot to show where the proportion of respondents fall on a negative to positive spectrum. Quickly looking at the data it is pretty clear that the Llama LLM more accurately categorizes the sentiment of each respondent. With this we could dive into the positive and negative responses to look for common topics or themes or see how they correlate with other independent variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmarkdown_text <- \"The <span style = 'color:#00457C'><b>bing<b></span> and <span style = 'color:#89C266;'><b>Loughran-McDonald<b></span> sentiment lexicons <br> miss the nuance of the language that the <span style = 'color:#FF7C48;'><b>Llama<b></span> <br> sentiment analysis captures.\"\n\nggplot(bing_sents) +\n  geom_vline(xintercept = 0, lwd = 1.5, color = \"#7F7F7F\", fill = \"#7F7F7F\",  alpha = .2)+\n  geom_density(aes(score), color = \"#00457C\", lwd = 1.5) +\n  geom_density(data = loughran_sents, aes(score), color = \"#89C266\", fill = \"#89C266\", alpha = .2, lwd = 1.5) +\n  geom_density(data = llama_sents, aes(value), color = \"#FF7C48\", fill = \"#FF7C48\", alpha = .2, lwd = 1.5) +\n  geom_text(aes(x = .25, y = .5, label = \"Neutral\"), color = \"#7F7F7F\", vjust = .25, alpha = .3) +\n  geom_segment(aes(x = .03, xend = .16, y = .45, yend = .49), color = \"#7F7F7F\", alpha = .3)+\n  theme_minimal()+\n  labs(title = \"Comparison of sentiments with different methods\", \n    subtitle = markdown_text,\n    y = \"Propotion of responses\",\n    x = \"More negative                                     More positive\") +\n  theme(plot.title = element_text(size = 20, face = \"bold\", family = \"sans\"), \n    plot.subtitle = ggtext::element_markdown(size = 16, family = \"sans\"),\n    axis.title = element_text(family = \"sans\", size = 12),\n    plot.title.position = \"plot\"\n    , axis.text.x = element_blank())\n```\n\n::: {.cell-output-display}\n![](llama-sentiment-classification_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n![](https://dabrianc.github.io/website/posts/llama/density_plot.png)\n\n# Conclusion\n\nThe `Ollama` and `mall` packages are incredibly easy to work with in R. They are not fast, but if you had several hundred responses it is much faster than going through text by hand. This is a simple addition to a scripted workfolow if you wanted to build this into an analysis.\n",
    "supporting": [
      "llama-sentiment-classification_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/nouislider-7.0.10/jquery.nouislider.min.js\"></script>\n<link href=\"../../site_libs/selectize-0.12.0/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/selectize-0.12.0/selectize.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.2/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.2/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}